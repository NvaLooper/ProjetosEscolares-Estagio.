#https://site112.com/tabela-cores-html -> Cores
#https://www.youtube.com/playlist?list=PLqx8fDb-FZDFznZcXb_u_NyiQ7Nai674- -> Tutorial (9/50)
#Configura√ß√£o:
from tkinter import *
from tkinter import ttk
import sqlite3
janela = Tk()
#BackEND
class Funcs():
    #Fun√ß√£o utilizada para o bot√£o limpar
    def limpar_tela(self):
        self.input_codigo.delete(0, END)
        self.input_telefone.delete(0, END)
        self.input_cidade.delete(0, END)
        self.input_nome.delete(0, END)
    def conecta_bd(self):
        self.conn = sqlite3.connect("Clientes.bd")
        self.cursor = self.conn.cursor(); print("\n------ ‚åõ Conectando ao banco de dados ‚åõ ------\n")
    def desconecta_bd(self):
        self.conn.close()
        print("\n------ üîå Banco de dados desconectado üîå ------\n")
    def montaTabelas(self):
        self.conecta_bd() 
        #Cria√ß√£o da tabela
        self.cursor.execute("""
            CREATE TABLE IF NOT EXISTS clientes (
                cod INTEGER PRIMARY KEY,
                nome_cliente CHAR(40) NOT NULL,
                telefone INTEGER(20),
                cidade CHAR(40)
            );
        """)
        self.conn.commit(); print("------ ‚úîÔ∏è Banco de dados criado ‚úîÔ∏è  ------\n")
        self.desconecta_bd()
    def add_clientes(self):
        self.codigoF = self.input_codigo.get()
        self.nomeF = self.input_nome.get()
        self.telefoneF = self.input_telefone.get()
        self.cidadeF = self.input_cidade.get()
        self.conecta_bd()
        self.cursor.execute(""" INSERT INTO clientes (nome_cliente,telefone,cidade)
            VALUES (?, ?, ?)""", (self.nomeF,self.telefoneF,self.cidadeF))
        self.conn.commit()
        self.desconecta_bd()
        self.select_lista()
        self.limpar_tela()
    def select_lista(self):
        self.lista.delete(*self.lista.get_children())
        self.conecta_bd()
        X = self.cursor.execute("""SELECT cod, nome_cliente, telefone, cidade FROM clientes
        ORDER BY nome_cliente ASC; """)
        for i in X:
            self.lista.insert("", END, values=i)
        self.desconecta_bd()

#FrontEND
class aplicativo(Funcs):
    #Fun√ß√£o respons√°vel por iniciar a janela
    def __init__(self):
        self.janela = janela
        self.config_tela()
        self.tela()
        self.coisas_Retangulo1()
        self.coisas_Retangulo2()
        self.montaTabelas()
        self.select_lista()
        janela.mainloop()
    #Fun√ß√£o respons√°vel pela configura√ß√£o da janela
    def config_tela(self):
        self.janela.title("Cadastro do usu√°rio")
        self.janela.geometry("700x520")
        self.janela.configure(background="#4682B4")
        self.janela.resizable(False, False)
        self.janela.maxsize(width=900, height=700)
        self.janela.minsize(width=500, height=400)
    #Fun√ß√£o respons√°vel pelos retangulos que s√£o exibidos na tela
    def tela(self):
        self.Retangulo_princ = Frame(
            self.janela, bd=4, bg="#D3D3D3",
            highlightbackground="Black",highlightthickness=3)
        self.Retangulo_princ.place(relx=0.16, rely=0.03,relwidth=0.7, relheight=0.46)
        self.Retangulo_sec = Frame(
            self.janela, bd=4, bg="#D3D3D3",
            highlightbackground="Black",highlightthickness=3)
        self.Retangulo_sec.place(relx=0.16, rely=0.51,relwidth=0.7, relheight=0.46)
    #Fun√ß√£o respons√°vel pela cria√ß√£o das coisas no retangulo 1
    def coisas_Retangulo1(self):
    #Bot√£o buscar:    
        self.botao_buscar = Button(self.Retangulo_princ, text="Buscar",bd=2, bg= "#4682B4", fg="White",font=("Calibri",10,"bold"))
        self.botao_buscar.place(relx=0.28, rely=0.09, relheight=0.16, relwidth=0.12)
    #Bot√£o novo:    
        self.botao_novo = Button(self.Retangulo_princ, text="Novo",bd=2, bg="#4682B4", fg="White",font=("Calibri",10,"bold"),command=self.add_clientes)
        self.botao_novo.place(relx=0.54, rely=0.09, relheight=0.16, relwidth=0.12)
    #Bot√£o alterar:    
        self.botao_alterar = Button(self.Retangulo_princ, text="Alterar",bd=2, bg="#4682B4", fg="White",font=("Calibri",10,"bold"))
        self.botao_alterar.place(relx=0.67, rely=0.09, relheight=0.16, relwidth=0.12)
    #Bot√£o apagar:    
        self.botao_apagar = Button(self.Retangulo_princ, text="Apagar",bd=2, bg="Red", fg="White",font=("Calibri",10,"bold"))
        self.botao_apagar.place(relx=0.8, rely=0.09, relheight=0.16, relwidth=0.12)
    #Bot√£o limpar:
        self.botao_limpar = Button(self.Retangulo_princ, text="Limpar",bd=2, bg="#4682B4", fg="White",font=("Calibri",10,"bold"),command=self.limpar_tela)
        self.botao_limpar.place(relx=0.8, rely=0.77, relheight=0.16, relwidth=0.12)
    #Cria√ß√£o da caixa de texto e o input(C√≥digo)
        self.codigo = Label(self.Retangulo_princ, text="C√≥digo", bg="#D3D3D3", fg="#4682B4",font=("Calibri",11))
        self.codigo.place(relx=0.08, rely=0.05)
        self.input_codigo = Entry(self.Retangulo_princ,font=("Calibri",11), highlightbackground="Black", highlightthickness=1)
        self.input_codigo.place(relx=0.085, rely=0.16, relwidth=0.13)
    #Cria√ß√£o da caixa de texto e o input(Telefone)
        self.telefone = Label(self.Retangulo_princ, text="Telefone", bg="#D3D3D3", fg="#4682B4",font=("Calibri",11))
        self.telefone.place(relx=0.08, rely=0.27)
        self.input_telefone = Entry(self.Retangulo_princ,font=("Calibri",11), highlightbackground="Black", highlightthickness=1)
        self.input_telefone.place(relx=0.085, rely=0.38, relwidth=0.28)
    #Cria√ß√£o da caixa de texto e o input(Cidade)
        self.cidade = Label(self.Retangulo_princ, text="Cidade", bg="#D3D3D3", fg="#4682B4",font=("Calibri",11))
        self.cidade.place(relx=0.08, rely=0.49) 
        self.input_cidade = Entry(self.Retangulo_princ,font=("Calibri",11), highlightbackground="Black", highlightthickness=1)
        self.input_cidade.place(relx=0.085, rely=0.60, relwidth=0.42)
    #Cria√ß√£o da caixa de texto e o input(Nome)
        self.nome = Label(self.Retangulo_princ, text="Nome", bg="#D3D3D3", fg="#4682B4",font=("Calibri",11))
        self.nome.place(relx=0.08, rely=0.71) 
        self.input_nome = Entry(self.Retangulo_princ,font=("Calibri",11), highlightbackground="Black", highlightthickness=1)
        self.input_nome.place(relx=0.085, rely=0.82, relwidth=0.57)
    #Fun√ß√£o respons√°vel pela cria√ß√£o das coisas no retangulo 2
    def coisas_Retangulo2(self):
        self.lista = ttk.Treeview(self.Retangulo_sec, height=3, columns=("coluna1","coluna2","coluna3","coluna4",))
    #Texto principal
        self.lista.heading("#0", text="")
        self.lista.heading("#1", text="C√≥digo")
        self.lista.heading("#2", text="Nome")
        self.lista.heading("#3", text="Telefone")
        self.lista.heading("#4", text="Cidade")
    #Tamanho das colunas
        self.lista.column("#0", width=1, stretch=NO)
        self.lista.column("#1", width=47)
        self.lista.column("#2", width=200)
        self.lista.column("#3", width=98)
        self.lista.column("#4", width=101)
        self.lista.place(relx=0.01, rely=0.05, relwidth=0.95, relheight=0.9)
    #Barra de rolagem
        self.Scroollista = Scrollbar(self.Retangulo_sec, orient="vertical")
        self.lista.configure(yscroll=self.Scroollista.set)
        self.Scroollista.place(relx=0.963,rely=0.10, relwidth=0.03, relheight=0.8)
aplicativo()
