# ----> Configura√ß√µes;
from tkinter import *
import sys
from tkinter import messagebox
import time
global temp_minutos, Minutos
Minutos = 0
temp_minutos = Minutos*60
def Cronometro():
    for x in range(temp_minutos,0,-1):
            segundos = x % 60
            minutoss = int (x/60) % 60
            horas = int(x / 3600)
            print(f"{horas:02}:{minutoss:02}:{segundos:02}")
            time.sleep(1)
# ----> In√≠cio do programa;
class aplicativo():
    def __init__(self):
        self.Menu()
        self.Tela_Menu()
        mainloop()
    #Centralizar tela:  
    def Centralizar(self,X,width=300, height=200):
        Largura_Janela = X.winfo_screenwidth()
        Altura_Janela = X.winfo_screenheight()
        x = (Largura_Janela/2) - (width/2)
        y = (Altura_Janela/2) - (height/2)
        X.geometry('%dx%d+%d+%d' % (width, height, x, y))
    #Configura√ß√£o da janela menu:
    def Menu(self):
        self.MenuN = Tk()
        self.Centralizar(self.MenuN,490,370)
        self.MenuN.title("Notificador para beber √°gua")
        self.MenuN.configure(background="#4682B4")
        self.MenuN.resizable(False, False)
    def Tela_Menu(self):
        #Retangulo para o t√≠tulo:
        self.RetanguloT = Frame(self.MenuN, bd=4, bg="White", highlightbackground="Black",highlightthickness=3)
        self.RetanguloT.place(relx=0.18, rely=0.05,relwidth=0.65, relheight=0.18)
        #Retangulo para o texto:
        self.RetanguloTx = Frame(self.MenuN, bd=4, bg="#4682B4", highlightbackground="Black",highlightthickness=1)
        self.RetanguloTx.place(relx=0.24, rely=0.89,relwidth=0.50, relheight=0.08)
        #Titulo:
        self.TituloMenu = Label(self.RetanguloT,text="Notificador para beber √°gua", bg="White", fg="Black",font=("Calibri",16,"bold"))
        self.TituloMenu.place(relx=0.094, rely=0.18) 
        self.GotaTitulo1 = Label(self.RetanguloT,text="üíß", bg="White", fg="Blue", font=("Calibri",16))
        self.GotaTitulo1.place(relx=0.90, rely=0.18) 
        self.GotaTitulo2 = Label(self.RetanguloT,text="üíß", bg="White", fg="Blue", font=("Calibri",16))
        self.GotaTitulo2.place(relx=0.01, rely=0.18) 
        #Texto:
        self.CriadorP = Label(self.MenuN,text="Criado por:", bg="#4682B4", fg="Black",font=("Calibri",10))
        self.CriadorP.place(relx=0.28, rely=0.9) 
        self.Nome = Label(self.MenuN,text="Vitor Silvares Guimar√£es", bg="#4682B4", fg="Yellow",font=("Calibri",10))
        self.Nome.place(relx=0.415, rely=0.9)
        #Bot√µes:
        def iniciar_programa():
                if Minutos == 0:
                    error = "Voc√™ deve selecionar um tempo antes de iniciar o contador"
                    messagebox.showerror("Escolha um tempo", error)
                else:
                    self.MenuN.withdraw() #Esconde a janela
                    self.Iniciar()
        self.Bot√£o_iniciar = Button(self.MenuN, text="Iniciar Contador",bd=2, bg="#32CD32", fg="White",font=("Calibri",12,"bold"), activebackground="#32CD32", activeforeground="White",command=iniciar_programa)
        self.Bot√£o_iniciar.place(relx=0.345, rely=0.358,relwidth=0.3, relheight=0.12)
        def config_programa():
            self.MenuN.withdraw() #Esconde a janela
            self.Config()
        self.Bot√£o_config = Button(self.MenuN, text="Configura√ß√µes",bd=2, bg="#808080", fg="White",font=("Calibri",12,"bold"), activebackground="#A9A9A9", activeforeground="White",command=config_programa)
        self.Bot√£o_config.place(relx=0.345, rely=0.485,relwidth=0.3, relheight=0.12)
        def fechar_programa(): 
            agradecimentos = "Voc√™ deseja fechar o programa?"
            X = messagebox.askyesno("Agradecimentos", agradecimentos)
            if X == YES:
                sys.exit()
        self.Bot√£o_fecharP = Button(self.MenuN, text="Fechar programa",bd=2, bg="Red", fg="White",font=("Calibri",12,"bold"), activebackground="Red", activeforeground="White",command=fechar_programa)
        self.Bot√£o_fecharP.place(relx=0.345, rely=0.61,relwidth=0.3, relheight=0.12)
    #Configura√ß√£o da janela do contador:
    def Iniciar(self):
        self.iniciar = Toplevel(self.MenuN)
        self.iniciar.title("üíß Contador üíß")
        self.Centralizar(self.iniciar,360,300)
        self.iniciar.configure(background="White")
        self.iniciar.resizable(False, False)
        self.Tela_Iniciar()
    def Tela_Iniciar(self):
        self.cronometro = Label(self.iniciar,text=Minutos, bg="White", fg="Black",font=("Calibri",32))
        self.cronometro.place(relx=0.27, rely=0.07) 
        def Bt_voltarI():
            self.iniciar.destroy()
            self.MenuN.deiconify()
        self.Bot√£o_voltar = Button(self.iniciar, text="‚Üê",bd=2, bg="Red", fg="White",font=("Calibri",14,"bold"), activebackground="Red", activeforeground="White",command=Bt_voltarI)
        self.Bot√£o_voltar.place(relx=0.02, rely=0.89,relwidth=0.14, relheight=0.09)
    #Configura√ß√£o da janela das configura√ß√µes:
    def Config(self):
        self.config = Toplevel(self.MenuN)
        self.config.title("Configura√ß√µes")
        self.Centralizar(self.config,260,300)
        self.config.configure(background="White")
        self.config.resizable(False, False)
        self.Tela_Configura√ß√µes()
    def Tela_Configura√ß√µes(self):
    #T√≠tulo:
        self.TituloConfig = Label(self.config,text="‚öôÔ∏è Configura√ß√µes ‚öôÔ∏è", bg="White", fg="Black",font=("Calibri",16,"bold"))
        self.TituloConfig.place(relx=0.135, rely=0.06)
    #Texto:
        self.TextoConfig = Label(self.config,text="Escolha o tempo desejado para ser \navisado de beber √°gua:", bg="White", fg="Black",font=("Calibri",12))
        self.TextoConfig.place(relx=0.05, rely=0.21)
    #Retangulo para os bot√µes:
        #self.RetanguloBt = Frame(self.config, bd=4, bg="White", highlightbackground="Black",highlightthickness=2)
        #self.RetanguloBt.place(relx=0.29, rely=0.28,relwidth=0.448, relheight=0.446)
    #Bot√µes:
        def Bt_5():
            global Minutos
            Minutos = 5
        self.Bot√£o_5min = Button(self.config, text="5 minutos",bd=2, bg="#4682B4", fg="White",font=("Calibri",12,"bold"), activebackground="#4682B4", activeforeground="White",command=Bt_5)
        self.Bot√£o_5min.place(relx=0.305, rely=0.43,relwidth=0.4, relheight=0.13)
        def Bt_15():
            global Minutos
            Minutos = 15
        self.Bot√£o_15min = Button(self.config, text="15 minutos",bd=2, bg="#4682B4", fg="White",font=("Calibri",12,"bold"), activebackground="#4682B4", activeforeground="White",command=Bt_15)
        self.Bot√£o_15min.place(relx=0.305, rely=0.565,relwidth=0.4, relheight=0.13)
        def Bt_30():
            global Minutos
            Minutos = 30
        self.Bot√£o_30min = Button(self.config, text="30 minutos",bd=2, bg="#4682B4", fg="White",font=("Calibri",12,"bold"), activebackground="#4682B4", activeforeground="White",command=Bt_30)
        self.Bot√£o_30min.place(relx=0.305, rely=0.698,relwidth=0.4, relheight=0.13)
        def Bt_voltarC():
            self.config.destroy()
            self.MenuN.deiconify()
        self.Bot√£o_voltar = Button(self.config, text="‚Üê",bd=2, bg="Red", fg="White",font=("Calibri",14,"bold"), activebackground="Red", activeforeground="White",command=Bt_voltarC)
        self.Bot√£o_voltar.place(relx=0.02, rely=0.89,relwidth=0.14, relheight=0.09)
aplicativo()
